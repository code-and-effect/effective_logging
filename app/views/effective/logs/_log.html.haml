.panel.panel-default.card
  .panel-heading.card-header
    .row
      .col-md-8
        - parents_of_log(log).each do |parent|
          = link_to(log.message, request.fullpath.sub('/' + log.to_param, '/' + parent.to_param))
          = ' > '
        %p= log.message.to_s.gsub("\n", '<br>').html_safe

      .col-md-4.text-right
        - prev_log = log.prev_log
        - next_log = log.next_log

        - if prev_log.present?
          = link_to 'Prev', request.fullpath.sub('/' + log.to_param, '/' + prev_log.to_param), class: 'btn btn-primary'

        - if next_log.present?
          = link_to 'Next', request.fullpath.sub('/' + log.to_param, '/' + next_log.to_param), class: 'btn btn-primary'

  .panel-body.card-body
    .row
      .col-md-6
        %p
          - status_class = bootstrap_class_for_status(log.status)
          %span{class: (defined?(EffectiveBootstrap) ? "badge badge-#{status_class}" : "label label-#{status_class}")}= log.status

          = log.created_at.strftime("%F %H:%M:%S")
          = '(' + time_ago_in_words(log.created_at) + ' ago)'

      .col-md-6
        - if log.user.present?
          %p
            %strong User:
            = (log.user.to_s.starts_with?('#<User:0x') ? (log.user.email rescue log.user) : log.user)

        - if log.associated_id.present? && log.associated_type.present? && (log.associated.present? rescue false)
          %p
            %strong Associated:
            - if log.associated.to_s.starts_with?('#<')
              = "#{log.associated.class.name} ##{log.associated.to_param}"
            - else
              = log.associated

    - log.details.each do |key, value|
      - next unless value.present?
      .row
        .col-md-12
          .mt-3
            %strong= "#{key.to_s.titleize}:"
          = format_log_details_value(log, key)

    - if log.logs.present?
      %hr
      %p This log contains #{log.logs_count} additional sub entries:
      = render_datatable(log.child_logs_datatable)
