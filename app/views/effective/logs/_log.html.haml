.panel{:class => "panel-#{bootstrap_class_for_status(log.status)}"}
  .panel-heading
    .row
      .col-sm-10
        - parents_of_log(log).each do |parent|
          = link_to(log.message, (request.fullpath.gsub(log.to_param, parent.to_param) rescue '#'))
          = ' > '
        %p= log.message
      .col-sm-2.text-right
        = link_to 'Prev', request.fullpath.gsub(log.to_param, log.prev_log.try(:to_param).to_s), class: 'btn btn-default', disabled: log.prev_log.blank?
        = link_to 'Next', request.fullpath.gsub(log.to_param, log.next_log.try(:to_param).to_s), class: 'btn btn-default', disabled: log.next_log.blank?

  .panel-body
    .row
      .col-lg-6
        %span.label{:class => "label-#{bootstrap_class_for_status(log.status)}"}= log.status
        &nbsp;
        = log.created_at.strftime("%Y-%m-%d %H:%M:%S")
        = '(' + time_ago_in_words(log.created_at) + ' ago)'
        %br
        %br

      .col-lg-6
        - if log.user.present?
          %strong User:
          &nbsp;
          = (log.user.to_s.starts_with?('#<User:0x') ? (log.user.email rescue log.user) : log.user)
        - if (log.associated.present? rescue false)
          %br
          %strong Regarding:
          &nbsp;
          - if log.associated.to_s.starts_with?('#<')
            = "#{log.associated.class.name} ##{log.associated.to_param}"
          - else
            = log.associated

    - log.details.each do |key, value|
      - next unless value.present?
      .row
        .col-lg-12
          %p
            %strong= "#{key.to_s.titleize}:"
          = format_log_details_value(log, key)

    - if log.logs.present?
      .row
        .col-lg-12
          %br
          %p
            %strong Additional Entries:
            = "this log contains #{log.logs_count} additional sub entries"
      - if log.datatable.nil? == false
        %hr
        .row
          .col-lg-12= render_datatable(log.datatable)

